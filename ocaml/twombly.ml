type draw
type transform_matrix
type gradient
type gradient_type

type line_join_style
type line_cap_style
type path_type = int

external of_image : Bimage.image -> draw = "_of_image"
external create : int -> int -> int -> draw = "_drawing"
external preserve : draw -> bool = "_preserve"
external set_preserve : draw -> bool -> unit = "_set_preserve"
external antialias : draw -> bool = "_antialias"
external set_antialias : draw -> bool -> unit = "_set_antialias"
external linewidth : draw -> float = "_linewidth"
external set_linewidth : draw -> float -> unit = "_set_linewidth"
external miterlimit : draw -> float = "_miterlimit"
external set_miterlimit : draw -> float -> unit = "_set_miterlimit"
external linejoin : draw -> line_join_style = "_linejoin"
external set_linejoin : draw -> line_join_style -> unit = "_set_linejoin"
external linecap : draw -> line_cap_style = "_linecap"
external set_linecap : draw -> line_cap_style -> unit = "_set_linecap"
external active_path : draw -> path_type = "_active_path"
external set_active_path : draw -> path_type -> unit = "_set_active_path"
external new_path : draw -> path_type = "_new_path"
external rotate : draw -> float -> unit = "_rotate"
external translate : draw -> float -> float -> unit = "_translate"
external scale : draw -> float -> unit = "_scale"
external scale2 : draw -> float -> float -> unit = "_scale2"
external skew : draw -> float -> float -> unit = "_skew"
external clear_transforms : draw -> unit = "_clear_transforms"
external close_polygon : draw -> unit = "_close_polygon"
external end_polygon : draw -> unit = "_end_polygon"
external invert_polygon : draw -> unit = "_invert_polygon"
external reset : draw -> unit = "_reset"
external clear : draw -> int -> int -> int -> int -> unit = "_clear"
external remove_all : draw -> unit = "_remove_all"
external ellipse : draw -> float -> float -> float -> float -> unit = "_ellipse"
external rect : draw -> float -> float -> float -> float -> unit = "_rect"
external clip : draw -> float -> float -> float -> float -> unit = "_clip"
external reset_clip : draw -> unit = "_reset_clip"
external last_x : draw -> float = "_last_x"
external last_y : draw -> float = "_last_y"
(* external rel_to_abs *)
external move_to : draw -> float -> float -> unit = "_move_to"
external move_rel : draw -> float -> float -> unit = "_move_rel"
external line_to : draw -> float -> float -> unit = "_line_to"
external line_rel : draw -> float -> float -> unit = "_line_rel"
external hline_to : draw -> float -> unit = "_hline_to"
external hline_rel : draw -> float -> unit = "_hline_rel"
external vline_to : draw -> float -> unit = "_vline_to"
external vline_rel : draw -> float -> unit = "_vline_rel"
external curve_to2 : draw -> float -> float -> unit = "_curve_to2"
external curve_rel2 : draw -> float -> float -> unit = "_curve_rel2"
external curve_to4 : draw -> float -> float -> float -> float -> unit = "_curve_to4"
external curve_rel4 : draw -> float -> float -> float -> float -> unit = "_curve_rel4"
(*external curve_to6 : draw -> float -> float -> float -> float -> float -> float -> unit = "_curve_to6"
external curve_rel6 : draw -> float -> float -> float -> float -> float -> float -> unit = "_curve_rel6"
external arc_to : draw -> float -> float -> float -> float -> float -> unit = "_arc_to"
external arc_rel : draw -> float -> float -> float -> float -> float -> unit = "_arc_rel"
external text_simple : draw -> float -> float -> string -> int -> float -> string -> unit = "_text_simple"
external text : draw -> float -> float -> string -> string -> float -> float -> unit = "_text"*)
external set_color : draw -> int -> int -> int -> int -> unit = "_set_color"
external fill : draw -> unit = "_twombly_fill"
external fill_color : draw -> float array -> unit = "_fill_color"
external stroke : draw -> unit = "_stroke"
external stroke_color : draw -> float array -> unit = "_stroke_color"
external dash : draw -> unit = "_dash"
external paint : draw -> unit = "_paint"
external set_autoclose : draw -> bool -> unit = "_set_autoclose"
external in_path : draw -> float -> float -> bool = "_in_path"
external is_drawn : draw -> float -> float -> bool = "_is_drawn"
external get_vertex : draw -> int -> (float * float) = "_get_vertex"
external next_vertex : draw -> (float * float) = "_next_vertex"
external get_command : draw -> int -> int = "_get_command"
external last_vertex : draw -> (float * float) = "_last_vertex"
external prev_vertex : draw -> (float * float) = "_prev_vertex"
external modify_vertex : draw -> int -> float -> float -> int = "_modify_vertex"
external total_vertices : draw -> int = "_total_vertices"
external alpha_mask_init : draw -> unit = "_alpha_mask_init"
external alpha_mask_free : draw -> unit = "_alpha_mask_free"
external alpha_mask_fill : draw -> int -> unit = "_alpha_mask_fill"
external alpha_mask_set : draw -> int -> int -> int -> unit = "_alpha_mask_set"
external alpha_mask_get : draw -> int -> int -> int = "_alpha_mask_get"
external join : draw -> draw -> unit = "_join"
external concat : draw -> draw -> unit = "_concat"
external get_transform_matrix : draw -> transform_matrix = "_get_transform_matrix"
external fill_gradient : draw -> gradient -> int -> int -> gradient_type = "_fill_gradient"
external stroke_gradient : draw -> gradient -> int -> int -> gradient_type = "_stroke_gradient"

module Transform = struct
    external create : unit -> transform_matrix = "_transform_create"
    external scale : transform_matrix -> float -> float -> unit = "_transform_scale"
    external translate : transform_matrix -> float -> float -> unit = "_transform_translate"
    external rotate : transform_matrix -> float -> unit = "_transform_rotate"
    external inverse_transform : transform_matrix -> float -> float -> (float * float) = "_transform_inverse_transform"
    external transform : transform_matrix -> float -> float -> (float * float) = "_transform_transform"
end

module Gradient = struct
    external create : unit -> gradient = "_gradient_create"
    external add_stop : gradient -> float array -> unit = "_gradient_add_stop"
    external get_transform_matrix : gradient -> transform_matrix = "_gradient_get_transform_matrix"
end
